// <auto-generated />
using System;
using ApplicationDbContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace StudSocSit.Migrations
{
    [DbContext(typeof(ReservoomDbContext))]
    partial class ReservoomDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.12")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ApplicationDbContext.Models.ChatModel", b =>
                {
                    b.Property<int>("ChatId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ChatId"));

                    b.HasKey("ChatId");

                    b.ToTable("Chat");
                });

            modelBuilder.Entity("ApplicationDbContext.Models.FriendRequestModel", b =>
                {
                    b.Property<int>("RequestId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RequestId"));

                    b.Property<int?>("ReceiverId")
                        .HasColumnType("int");

                    b.Property<int?>("SenderId")
                        .HasColumnType("int");

                    b.Property<int?>("StudentModelStudentId")
                        .HasColumnType("int");

                    b.HasKey("RequestId");

                    b.HasIndex("StudentModelStudentId");

                    b.ToTable("FriendRequest");
                });

            modelBuilder.Entity("ApplicationDbContext.Models.FriendsModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("FriendId")
                        .HasColumnType("int");

                    b.Property<int?>("StudentId")
                        .HasColumnType("int");

                    b.Property<int?>("StudentModelStudentId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StudentModelStudentId");

                    b.ToTable("Friends");
                });

            modelBuilder.Entity("ApplicationDbContext.Models.MessageModel", b =>
                {
                    b.Property<int>("MessageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MessageId"));

                    b.Property<int?>("AuthorId")
                        .HasColumnType("int");

                    b.Property<int?>("ChatId")
                        .HasColumnType("int");

                    b.Property<int?>("ChatModelChatId")
                        .HasColumnType("int");

                    b.Property<string>("Text")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("datetime2");

                    b.HasKey("MessageId");

                    b.HasIndex("ChatModelChatId");

                    b.ToTable("Message");
                });

            modelBuilder.Entity("ApplicationDbContext.Models.StudentModel", b =>
                {
                    b.Property<int>("StudentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StudentId"));

                    b.Property<int?>("ChatModelChatId")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FacultyName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PhoneNumber")
                        .HasColumnType("int");

                    b.Property<string>("Specialization")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("StudentId");

                    b.HasIndex("ChatModelChatId");

                    b.ToTable("Student");
                });

            modelBuilder.Entity("ApplicationDbContext.Models.UserModel", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("StudentId")
                        .HasColumnType("int");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.HasIndex("StudentId");

                    b.ToTable("User");
                });

            modelBuilder.Entity("ApplicationDbContext.Models.FriendRequestModel", b =>
                {
                    b.HasOne("ApplicationDbContext.Models.StudentModel", null)
                        .WithMany("FriendRequests")
                        .HasForeignKey("StudentModelStudentId");
                });

            modelBuilder.Entity("ApplicationDbContext.Models.FriendsModel", b =>
                {
                    b.HasOne("ApplicationDbContext.Models.StudentModel", null)
                        .WithMany("Friends")
                        .HasForeignKey("StudentModelStudentId");
                });

            modelBuilder.Entity("ApplicationDbContext.Models.MessageModel", b =>
                {
                    b.HasOne("ApplicationDbContext.Models.ChatModel", null)
                        .WithMany("Messages")
                        .HasForeignKey("ChatModelChatId");
                });

            modelBuilder.Entity("ApplicationDbContext.Models.StudentModel", b =>
                {
                    b.HasOne("ApplicationDbContext.Models.ChatModel", null)
                        .WithMany("Participants")
                        .HasForeignKey("ChatModelChatId");
                });

            modelBuilder.Entity("ApplicationDbContext.Models.UserModel", b =>
                {
                    b.HasOne("ApplicationDbContext.Models.StudentModel", "Student")
                        .WithMany()
                        .HasForeignKey("StudentId");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("ApplicationDbContext.Models.ChatModel", b =>
                {
                    b.Navigation("Messages");

                    b.Navigation("Participants");
                });

            modelBuilder.Entity("ApplicationDbContext.Models.StudentModel", b =>
                {
                    b.Navigation("FriendRequests");

                    b.Navigation("Friends");
                });
#pragma warning restore 612, 618
        }
    }
}
