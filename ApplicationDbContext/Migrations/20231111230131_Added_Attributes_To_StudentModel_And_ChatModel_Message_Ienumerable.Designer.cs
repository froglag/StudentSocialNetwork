// <auto-generated />
using System;
using ApplicationDbContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ApplicationDbContext.Migrations
{
    [DbContext(typeof(ReservoomDbContext))]
    [Migration("20231111230131_Added_Attributes_To_StudentModel_And_ChatModel_Message_Ienumerable")]
    partial class Added_Attributes_To_StudentModel_And_ChatModel_Message_Ienumerable
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.12");

            modelBuilder.Entity("ApplicationDbContext.Models.ChatModel", b =>
                {
                    b.Property<int>("ChatId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.HasKey("ChatId");

                    b.ToTable("Chat");
                });

            modelBuilder.Entity("ApplicationDbContext.Models.MessageModel", b =>
                {
                    b.Property<int>("MessageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("AuthorId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ChatId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("ChatModelChatId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("TEXT");

                    b.HasKey("MessageId");

                    b.HasIndex("ChatModelChatId");

                    b.ToTable("Message");
                });

            modelBuilder.Entity("ApplicationDbContext.Models.NewsModel", b =>
                {
                    b.Property<int>("NewsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("AuthorId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("PublishDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("NewsId");

                    b.ToTable("News");
                });

            modelBuilder.Entity("ApplicationDbContext.Models.StudentModel", b =>
                {
                    b.Property<int>("StudentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("ChatModelChatId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Email")
                        .HasColumnType("TEXT");

                    b.Property<string>("FacultyName")
                        .HasColumnType("TEXT");

                    b.Property<string>("FirstName")
                        .HasColumnType("TEXT");

                    b.Property<string>("LastName")
                        .HasColumnType("TEXT");

                    b.Property<int?>("PhoneNumber")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Specialization")
                        .HasColumnType("TEXT");

                    b.Property<int?>("StudentModelStudentId")
                        .HasColumnType("INTEGER");

                    b.HasKey("StudentId");

                    b.HasIndex("ChatModelChatId");

                    b.HasIndex("StudentModelStudentId");

                    b.ToTable("Student");
                });

            modelBuilder.Entity("ApplicationDbContext.Models.UserModel", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("StudentId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("UserId");

                    b.HasIndex("StudentId");

                    b.ToTable("User");
                });

            modelBuilder.Entity("ApplicationDbContext.Models.MessageModel", b =>
                {
                    b.HasOne("ApplicationDbContext.Models.ChatModel", null)
                        .WithMany("Messages")
                        .HasForeignKey("ChatModelChatId");
                });

            modelBuilder.Entity("ApplicationDbContext.Models.StudentModel", b =>
                {
                    b.HasOne("ApplicationDbContext.Models.ChatModel", null)
                        .WithMany("Participants")
                        .HasForeignKey("ChatModelChatId");

                    b.HasOne("ApplicationDbContext.Models.StudentModel", null)
                        .WithMany("Friends")
                        .HasForeignKey("StudentModelStudentId");
                });

            modelBuilder.Entity("ApplicationDbContext.Models.UserModel", b =>
                {
                    b.HasOne("ApplicationDbContext.Models.StudentModel", "Student")
                        .WithMany()
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Student");
                });

            modelBuilder.Entity("ApplicationDbContext.Models.ChatModel", b =>
                {
                    b.Navigation("Messages");

                    b.Navigation("Participants");
                });

            modelBuilder.Entity("ApplicationDbContext.Models.StudentModel", b =>
                {
                    b.Navigation("Friends");
                });
#pragma warning restore 612, 618
        }
    }
}
